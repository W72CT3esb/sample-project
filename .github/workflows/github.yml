name: Test CI/CD
on: 
  push:
   branches:
    - main
jobs:
  build:
    name: build-job
    runs-on: self-hosted
    steps:
    - name: Checkout
      uses: actions/checkout@main
      with:
        clean: false

    - name: build
      shell: cmd
      run: |
        set PATH=C:\Program Files (x86)\MSBuild\14.0\Bin;%PATH%
        echo "build on windows"
        MSBuild sample-app\sample-app.sln /t:rebuild /p:Configuration=Release;Platform=x64
        xcopy sample-app\sample-app\config.ini sample-app\x64\Release
        echo "build successful!"

  # check:
  #   name: check-job
  #   needs: build
  #   runs-on: self-hosted
  #   steps:
  #   - name: cppcheck
  #     shell: cmd
  #     run: |
  #       set PATH=C:\3rdparty\Cppcheck;%PATH%
  #       echo "cppcheck on windows"
  #       cppcheck --quiet --xml --enable=warning,style,performance,portability --language=c++ -j %NUMBER_OF_PROCESSORS% --template=vs --project=C:\Users\NES\Desktop\hayakawa\FieldAnalyst製品開発作業効率化に向けたCI／CDの導入検証\GitHub\sample-project\sample\sample2\sample2.vcxproj --output-file=cppcheck.txt
  #       echo "cppcheck successful!"

  # coverage:
  #   name: coverage-job
  #   needs: build
  #   runs-on: self-hosted
  #   steps:
  #   - name: coverage
  #     shell: cmd
  #     run: |
  #       set PATH=C:\3rdparty\OpenCppCoverage;%PATH%
  #       echo "coverage on windows"
  #       OpenCppCoverage --source sample\sample1 --export_type html:coverage -- sample\test_sample1\x64\Release\test_sample1.exe
  #       echo "coverage successful!"

  # test:
  #   name: test-job
  #   needs: [check, coverage]
  #   runs-on: self-hosted
  #   steps:
  #   - name: test
  #     shell: cmd
  #     run: |
  #       set PATH=C:\3rdparty\opencv\build\x64\vc15\bin;%PATH%
  #       echo "test on windows"
  #       :# sample\test_sample1\x64\Release\test_sample1.exe
  #       sample\test_sample2\x64\Release\test_sample2.exe
  #       echo "test successful!"

  #   - name: copy
  #     shell: cmd
  #     run: | 
  #       rmdir /s /q path\to\artifact
  #       mkdir path\to\artifact
  #       xcopy sample\sample2\x64\Release\sample2.exe path\to\artifact
  #       xcopy cppcheck.txt path\to\artifact
  #       xcopy /e coverage path\to\artifact
  #   - uses: actions/upload-artifact@v3
  #     with: 
  #       name: my-artifact
  #       path: path/to/artifact

  # deploy:
  #   name: deploy-job
  #   needs: test
  #   runs-on: self-hosted
  #   steps:
  #   - shell: cmd
  #     run: echo "deploy on windows"
  #   - uses: actions/download-artifact@v3
  #     name: deploy
  #     with:
  #       name: my-artifact
  #       path: C:\Users\NES\Desktop\deploy
  #   - shell: cmd
  #     run: echo "deploy successful!!"
