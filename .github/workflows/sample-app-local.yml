name: Test CI/CD
on: 
  push:
   branches:
    - main

jobs:
  Build:
    name: Build
    runs-on: self-hosted
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Codebuild
      shell: cmd
      run: |
        set PATH=C:\Program Files (x86)\MSBuild\14.0\Bin;%PATH%
        rmdir /s /q sample-app\x64\Release
        MSBuild sample-app\sample-app.sln /t:rebuild /p:Configuration=Release;Platform=x64
        xcopy sample-app\sample-app\config.ini sample-app\x64\Release

  Code-Check:
    name: Code-Check
    needs: Build
    runs-on: self-hosted
    steps:
    - name: Cppcheck
      shell: cmd
      run: | 
        set PATH=C:\3rdparty\Cppcheck;%PATH%
        set PATH=C:\Users\NES\AppData\Local\Programs\Python\Python38\Scripts\;%PATH%
        set PATH=C:\Users\NES\AppData\Local\Programs\Python\Python38\;%PATH%
        cppcheck --quiet --xml  --enable=warning,style,performance,portability -j %NUMBER_OF_PROCESSORS% --language=c++  --template=vs --project=sample-app\sample-app\sample-app.vcxproj 2>cppcheck-result.xml
        yes | python -m pip install cppcheck-junit
        cppcheck_junit cppcheck-result.xml cppcheck-junit.xml
        python -m pip uninstall --yes cppcheck-junit

    - name: Report
      uses: dorny/test-reporter@v1
      if: success() || failure()    # run this step even if previous step failed
      with:
        name: Cppcheck-Result           # Name of the check run which will be created
        path: cppcheck-junit.xml    # Path to test results
        reporter: jest-junit        # Format of test results

  # Test:
  #   name: Test
  #   needs: Code-Check
  #   runs-on: self-hosted
  #   steps:
  #   - name: Unit-Test
  #     shell: cmd
  #     run: |
  #       set PATH=C:\3rdparty\opencv\build\x64\vc15\bin;%PATH%
  #       cd sample-app\x64\Release
  #       .\unittest.exe --gtest_output=xml:test_result.xml
  #   - name: Test-Report
  #     uses: dorny/test-reporter@v1
  #     if: success() || failure()    # run this step even if previous step failed
  #     with:
  #       name: Google-Test-Result           # Name of the check run which will be created
  #       path: sample-app/x64/Release/test_result.xml    # Path to test results
  #       reporter: jest-junit        # Format of test results

  # integrationtest:
  #   name: integrationtest-job
  #   needs: unittest
  #   runs-on: self-hosted
  #   steps:
  #   - name: integration-test
  #     shell: cmd
  #     run: | 
  #       set PATH=C:\3rdparty\opencv\build\x64\vc15\bin;%PATH%
  #       cd sample-app\x64\Release
  #       .\integrationtest.exe
  #       fc /n C:\\Users\\NES\\Desktop\\hayakawa\\CICD\\Output_original\\result.csv C:\\Users\\NES\\Desktop\\hayakawa\\CICD\\Output\\result.csv
  #       echo %ERRORLEVEL%
  #       cd ..\..\..\
  #       rmdir /s /q path\to\artifacts
  #       mkdir path\to\artifacts
  #       xcopy sample-app\x64\Release path\to\artifacts

  #   - uses: actions/upload-artifact@v3
  #     with: 
  #       name: my-artifact
  #       path: path/to/artifacts

#"C:\Program Files\WinMerge\WinMergeU.exe" C:\\Users\\NES\\Desktop\\hayakawa\\CICD\\Output_original\\result.csv C:\\Users\\NES\\Desktop\\hayakawa\\CICD\\Output\\result.csv /minimize /noninteractive /u /or .\out.html
    # - name: copy
    #   shell: cmd
    #   run: |
    #     rmdir /s /q path\to\artifacts
    #     mkdir path\to\artifacts
    #     xcopy sample-app\x64\Release path\to\artifacts
    # - uses: actions/upload-artifact@v3
    #   with: 
    #     name: my-artifact
    #     path: path/to/artifacts

  # deploy:
  #   name: deploy-job
  #   needs: test
  #   runs-on: self-hosted
  #   steps:
  #   - uses: actions/download-artifact@v3
  #     name: deploy
  #     with:
  #       name: my-artifact
  #       path: C:\Users\NES\Desktop\deploy
